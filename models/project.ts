/*
Appwrite

Appwrite backend as a service cuts up to 70% of the time and costs required for building a modern application. We abstract and simplify common development tasks behind a REST APIs, to help you develop your app in a fast and secure way. For full API documentation and tutorials go to [https://appwrite.io/docs](https://appwrite.io/docs)

The version of the OpenAPI document: 1.5.0
Contact: team@appwrite.io

NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { AuthProvider } from './auth-provider';
import { Key } from './key';
import { Platform } from './platform';
import { Webhook } from './webhook';

/**
 * Project
 * @export
 * @interface Project
 */
export interface Project {
    /**
     * Project description.
     * @type {string}
     * @memberof Project
     */
    'description': string;
    /**
     * Project ID.
     * @type {string}
     * @memberof Project
     */
    '$id': string;
    /**
     * Project creation date in ISO 8601 format.
     * @type {string}
     * @memberof Project
     */
    '$createdAt': string;
    /**
     * Project update date in ISO 8601 format.
     * @type {string}
     * @memberof Project
     */
    '$updatedAt': string;
    /**
     * Project name.
     * @type {string}
     * @memberof Project
     */
    'name': string;
    /**
     * Project team ID.
     * @type {string}
     * @memberof Project
     */
    'teamId': string;
    /**
     * Project logo file ID.
     * @type {string}
     * @memberof Project
     */
    'logo': string;
    /**
     * Project website URL.
     * @type {string}
     * @memberof Project
     */
    'url': string;
    /**
     * Company legal name.
     * @type {string}
     * @memberof Project
     */
    'legalName': string;
    /**
     * Country code in [ISO 3166-1](http://en.wikipedia.org/wiki/ISO_3166-1) two-character format.
     * @type {string}
     * @memberof Project
     */
    'legalCountry': string;
    /**
     * State name.
     * @type {string}
     * @memberof Project
     */
    'legalState': string;
    /**
     * City name.
     * @type {string}
     * @memberof Project
     */
    'legalCity': string;
    /**
     * Company Address.
     * @type {string}
     * @memberof Project
     */
    'legalAddress': string;
    /**
     * Company Tax ID.
     * @type {string}
     * @memberof Project
     */
    'legalTaxId': string;
    /**
     * Session duration in seconds.
     * @type {number}
     * @memberof Project
     */
    'authDuration': number;
    /**
     * Max users allowed. 0 is unlimited.
     * @type {number}
     * @memberof Project
     */
    'authLimit': number;
    /**
     * Max sessions allowed per user. 100 maximum.
     * @type {number}
     * @memberof Project
     */
    'authSessionsLimit': number;
    /**
     * Max allowed passwords in the history list per user. Max passwords limit allowed in history is 20. Use 0 for disabling password history.
     * @type {number}
     * @memberof Project
     */
    'authPasswordHistory': number;
    /**
     * Whether or not to check user\'s password against most commonly used passwords.
     * @type {boolean}
     * @memberof Project
     */
    'authPasswordDictionary': boolean;
    /**
     * Whether or not to check the user password for similarity with their personal data.
     * @type {boolean}
     * @memberof Project
     */
    'authPersonalDataCheck': boolean;
    /**
     * List of Auth Providers.
     * @type {Array<AuthProvider>}
     * @memberof Project
     */
    'oAuthProviders': Array<AuthProvider>;
    /**
     * List of Platforms.
     * @type {Array<Platform>}
     * @memberof Project
     */
    'platforms': Array<Platform>;
    /**
     * List of Webhooks.
     * @type {Array<Webhook>}
     * @memberof Project
     */
    'webhooks': Array<Webhook>;
    /**
     * List of API Keys.
     * @type {Array<Key>}
     * @memberof Project
     */
    'keys': Array<Key>;
    /**
     * Status for custom SMTP
     * @type {boolean}
     * @memberof Project
     */
    'smtpEnabled': boolean;
    /**
     * SMTP sender name
     * @type {string}
     * @memberof Project
     */
    'smtpSenderName': string;
    /**
     * SMTP sender email
     * @type {string}
     * @memberof Project
     */
    'smtpSenderEmail': string;
    /**
     * SMTP reply to email
     * @type {string}
     * @memberof Project
     */
    'smtpReplyTo': string;
    /**
     * SMTP server host name
     * @type {string}
     * @memberof Project
     */
    'smtpHost': string;
    /**
     * SMTP server port
     * @type {number}
     * @memberof Project
     */
    'smtpPort': number;
    /**
     * SMTP server username
     * @type {string}
     * @memberof Project
     */
    'smtpUsername': string;
    /**
     * SMTP server password
     * @type {string}
     * @memberof Project
     */
    'smtpPassword': string;
    /**
     * SMTP server secure protocol
     * @type {string}
     * @memberof Project
     */
    'smtpSecure': string;
    /**
     * Email/Password auth method status
     * @type {boolean}
     * @memberof Project
     */
    'authEmailPassword': boolean;
    /**
     * Magic URL auth method status
     * @type {boolean}
     * @memberof Project
     */
    'authUsersAuthMagicURL': boolean;
    /**
     * Email (OTP) auth method status
     * @type {boolean}
     * @memberof Project
     */
    'authEmailOtp': boolean;
    /**
     * Anonymous auth method status
     * @type {boolean}
     * @memberof Project
     */
    'authAnonymous': boolean;
    /**
     * Invites auth method status
     * @type {boolean}
     * @memberof Project
     */
    'authInvites': boolean;
    /**
     * JWT auth method status
     * @type {boolean}
     * @memberof Project
     */
    'authJWT': boolean;
    /**
     * Phone auth method status
     * @type {boolean}
     * @memberof Project
     */
    'authPhone': boolean;
    /**
     * Account service status
     * @type {boolean}
     * @memberof Project
     */
    'serviceStatusForAccount': boolean;
    /**
     * Avatars service status
     * @type {boolean}
     * @memberof Project
     */
    'serviceStatusForAvatars': boolean;
    /**
     * Databases service status
     * @type {boolean}
     * @memberof Project
     */
    'serviceStatusForDatabases': boolean;
    /**
     * Locale service status
     * @type {boolean}
     * @memberof Project
     */
    'serviceStatusForLocale': boolean;
    /**
     * Health service status
     * @type {boolean}
     * @memberof Project
     */
    'serviceStatusForHealth': boolean;
    /**
     * Storage service status
     * @type {boolean}
     * @memberof Project
     */
    'serviceStatusForStorage': boolean;
    /**
     * Teams service status
     * @type {boolean}
     * @memberof Project
     */
    'serviceStatusForTeams': boolean;
    /**
     * Users service status
     * @type {boolean}
     * @memberof Project
     */
    'serviceStatusForUsers': boolean;
    /**
     * Functions service status
     * @type {boolean}
     * @memberof Project
     */
    'serviceStatusForFunctions': boolean;
    /**
     * GraphQL service status
     * @type {boolean}
     * @memberof Project
     */
    'serviceStatusForGraphql': boolean;
    /**
     * Messaging service status
     * @type {boolean}
     * @memberof Project
     */
    'serviceStatusForMessaging': boolean;
}

