/*
Appwrite

Appwrite backend as a service cuts up to 70% of the time and costs required for building a modern application. We abstract and simplify common development tasks behind a REST APIs, to help you develop your app in a fast and secure way. For full API documentation and tutorials go to [https://appwrite.io/docs](https://appwrite.io/docs)

The version of the OpenAPI document: 1.5.0
Contact: team@appwrite.io

NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import { AxiosRequestConfig } from "axios";
import {
  AccountApi,
  AssistantApi,
  AvatarsApi,
  ConsoleApi,
  DatabasesApi,
  FunctionsApi,
  GraphqlApi,
  HealthApi,
  LocaleApi,
  MessagingApi,
  MigrationsApi,
  ProjectApi,
  ProjectsApi,
  ProxyApi,
  StorageApi,
  TeamsApi,
  UsersApi,
  VcsApi,
} from "./api";
import { Configuration, ConfigurationParameters } from "./configuration";
import { AppwriteConsoleCustom } from "./client-custom";

export class AppwriteConsole extends AppwriteConsoleCustom {
  readonly account: AccountApi;
  readonly assistant: AssistantApi;
  readonly avatars: AvatarsApi;
  readonly console: ConsoleApi;
  readonly databases: DatabasesApi;
  readonly functions: FunctionsApi;
  readonly graphql: GraphqlApi;
  readonly health: HealthApi;
  readonly locale: LocaleApi;
  readonly messaging: MessagingApi;
  readonly migrations: MigrationsApi;
  readonly project: ProjectApi;
  readonly projects: ProjectsApi;
  readonly proxy: ProxyApi;
  readonly storage: StorageApi;
  readonly teams: TeamsApi;
  readonly users: UsersApi;
  readonly vcs: VcsApi;

  constructor(configurationParameters: ConfigurationParameters) {
    super(configurationParameters);
    const configuration = new Configuration(configurationParameters);
    this.account = new AccountApi(configuration);
    this.assistant = new AssistantApi(configuration);
    this.avatars = new AvatarsApi(configuration);
    this.console = new ConsoleApi(configuration);
    this.databases = new DatabasesApi(configuration);
    this.functions = new FunctionsApi(configuration);
    this.graphql = new GraphqlApi(configuration);
    this.health = new HealthApi(configuration);
    this.locale = new LocaleApi(configuration);
    this.messaging = new MessagingApi(configuration);
    this.migrations = new MigrationsApi(configuration);
    this.project = new ProjectApi(configuration);
    this.projects = new ProjectsApi(configuration);
    this.proxy = new ProxyApi(configuration);
    this.storage = new StorageApi(configuration);
    this.teams = new TeamsApi(configuration);
    this.users = new UsersApi(configuration);
    this.vcs = new VcsApi(configuration);
  }

}
